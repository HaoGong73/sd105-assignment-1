const apiKey="y3HnuYNUAqAbaf7rmLl9",inputForm=document.querySelector("form"),streetsList=document.querySelector(".streets"),stopsSchedule=document.querySelector("tbody"),title=document.querySelector("#street-name"),streetsListHTML=t=>{streetsList.innerHTML="",t.forEach(t=>{streetsList.insertAdjacentHTML("beforeend",`<a href="#" data-street-key="${t.key}"
      >${t.name}</a>`)})},searchStreets=async t=>{let e=t.split(" ");t=e.join("%20");t=`https://api.winnipegtransit.com/v3/streets.json?api-key=${apiKey}&name=${t}&usage=long`;const s=await fetch(t);t=await s.json();if(404===t.status||403===t.status||0===t.streets.length)throw"Street Not Found";return t.streets},getAllStopKeys=async t=>{t=`https://api.winnipegtransit.com/v3/stops.json?api-key=${apiKey}&street=${t}`;const e=await fetch(t);return(await e.json()).stops},getStopsSchedule=async t=>{t=`https://api.winnipegtransit.com/v3/stops/${t}/schedule.json?api-key=${apiKey}&max-results-per-route=2`;const e=await fetch(t);return await e.json()},timeCovert12h=t=>{let e=new Date(t);var s=e.getHours(),t=s%12||12;let r=e.getMinutes();s=s<12||24===s?"AM":"PM";return`${t}:${r.toString().padStart(2,"0")} ${s}`},scheduleListHTML=t=>{stopsSchedule.innerHTML="",t.forEach(e=>{e["stop-schedule"]["route-schedules"].forEach(t=>{t["scheduled-stops"].forEach(t=>{stopsSchedule.insertAdjacentHTML("beforeend",`<tr>
            <td>${e["stop-schedule"].stop.name}</td>
            <td>${e["stop-schedule"].stop["cross-street"].name}</td>
            <td>${e["stop-schedule"].stop.direction}</td>
            <td>${t.bus.key}</td>
            <td>${timeCovert12h(t.times.arrival.scheduled)}</td>
          </tr>`)})})})};inputForm.addEventListener("submit",t=>{t.preventDefault(),searchStreets(t.target[0].value).then(t=>streetsListHTML(t)).catch(t=>alert(t)),t.target[0].value=""}),streetsList.addEventListener("click",t=>{title.innerHTML=`Displaying results for ${t.target.closest("a").innerHTML}`,getAllStopKeys(t.target.closest("a").dataset.streetKey).catch(t=>console.log(t)).then(t=>{const e=[];t.map(t=>{e.push(getStopsSchedule(t.key))}),Promise.all(e).then(t=>scheduleListHTML(t)).catch(t=>console.log(t))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlcyI6WyJhcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXBpS2V5ID0gJ3kzSG51WU5VQXFBYmFmN3JtTGw5JztcbmNvbnN0IGlucHV0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvcm0nKTtcbmNvbnN0IHN0cmVldHNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN0cmVldHMnKTtcbmNvbnN0IHN0b3BzU2NoZWR1bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd0Ym9keScpO1xuY29uc3QgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3RyZWV0LW5hbWUnKTtcblxuY29uc3Qgc3RyZWV0c0xpc3RIVE1MID0gKHN0cmVldHMpID0+IHtcbiAgc3RyZWV0c0xpc3QuaW5uZXJIVE1MID0gJyc7XG4gIHN0cmVldHMuZm9yRWFjaChzdHJlZXQgPT4ge1xuICAgIHN0cmVldHNMaXN0Lmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJyxcbiAgICBgPGEgaHJlZj1cIiNcIiBkYXRhLXN0cmVldC1rZXk9XCIke3N0cmVldC5rZXl9XCJcbiAgICAgID4ke3N0cmVldC5uYW1lfTwvYT5gXG4gICAgKTtcbiAgfSk7XG59XG5cbmNvbnN0IHNlYXJjaFN0cmVldHMgPSBhc3luYyAoc3RyZWV0TmFtZSkgPT4ge1xuICBsZXQgYXJyYXkgPSBzdHJlZXROYW1lLnNwbGl0KCcgJyk7XG4gIHN0cmVldE5hbWUgPSBhcnJheS5qb2luKCclMjAnKTtcbiAgbGV0IHN0cmVldFVSTCA9IGBodHRwczovL2FwaS53aW5uaXBlZ3RyYW5zaXQuY29tL3YzL3N0cmVldHMuanNvbj9hcGkta2V5PSR7YXBpS2V5fSZuYW1lPSR7c3RyZWV0TmFtZX0mdXNhZ2U9bG9uZ2A7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goc3RyZWV0VVJMKTsgIFxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gIGlmICggZGF0YS5zdGF0dXMgPT09IDQwNCB8fGRhdGEuc3RhdHVzID09PSA0MDN8fCBkYXRhLnN0cmVldHMubGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgJ1N0cmVldCBOb3QgRm91bmQnO1xuICB9XG4gIFxuICByZXR1cm4gZGF0YS5zdHJlZXRzO1xufVxuXG5jb25zdCBnZXRBbGxTdG9wS2V5cyA9IGFzeW5jKHN0cmVldEtleSkgPT4ge1xuICBsZXQgc3RvcHNVUkwgPSBgaHR0cHM6Ly9hcGkud2lubmlwZWd0cmFuc2l0LmNvbS92My9zdG9wcy5qc29uP2FwaS1rZXk9JHthcGlLZXl9JnN0cmVldD0ke3N0cmVldEtleX1gO1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHN0b3BzVVJMKTsgIFxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICBcbiAgcmV0dXJuIGRhdGEuc3RvcHM7XG59XG5cbmNvbnN0IGdldFN0b3BzU2NoZWR1bGUgPSBhc3luYyAoc3RvcHNLZXkpID0+IHtcbiAgbGV0IHN0b3BzU2NoZWR1bGVVUkwgPSBgaHR0cHM6Ly9hcGkud2lubmlwZWd0cmFuc2l0LmNvbS92My9zdG9wcy8ke3N0b3BzS2V5fS9zY2hlZHVsZS5qc29uP2FwaS1rZXk9JHthcGlLZXl9Jm1heC1yZXN1bHRzLXBlci1yb3V0ZT0yYDtcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHN0b3BzU2NoZWR1bGVVUkwpOyAgXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgcmV0dXJuIGRhdGE7XG59XG5cbmNvbnN0IHRpbWVDb3ZlcnQxMmggPSAoZGF0ZVN0cmluZykgPT4ge1xuICBsZXQgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHJpbmcpO1xuICBsZXQgaG91cjI0ID0gZGF0ZS5nZXRIb3VycygpO1xuICBsZXQgaG91cjEyID0gaG91cjI0ICUgMTIgfHwgMTI7XG4gIGxldCBtaW51dGUgPSBkYXRlLmdldE1pbnV0ZXMoKTtcbiAgbGV0IGFtcG0gPSAoaG91cjI0IDwgMTIgfHwgaG91cjI0ID09PSAyNCkgPyBcIkFNXCIgOiBcIlBNXCI7XG4gIFxuICByZXR1cm4gYCR7aG91cjEyfToke21pbnV0ZS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9ICR7YW1wbX1gIDtcbn1cblxuY29uc3Qgc2NoZWR1bGVMaXN0SFRNTCA9IChzY2hlZHVsZXMpID0+IHtcbiAgc3RvcHNTY2hlZHVsZS5pbm5lckhUTUwgPSAnJztcbiAgXG4gIHNjaGVkdWxlcy5mb3JFYWNoKCBzY2hlZHVsZSA9PiB7XG5cbiAgICBzY2hlZHVsZVsnc3RvcC1zY2hlZHVsZSddWydyb3V0ZS1zY2hlZHVsZXMnXS5mb3JFYWNoKChkYXRhKSA9PiB7XG4gICAgICBkYXRhWydzY2hlZHVsZWQtc3RvcHMnXS5mb3JFYWNoKChzY2hlZHVsZVN0b3ApID0+IHtcblxuICAgICAgICAvLyBsZXQgZGF0ZSA9IG5ldyBEYXRlKHNjaGVkdWxlU3RvcC50aW1lcy5hcnJpdmFsLnNjaGVkdWxlZCk7XG5cbiAgICAgICAgc3RvcHNTY2hlZHVsZS5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsXG4gICAgICAgICAgYDx0cj5cbiAgICAgICAgICAgIDx0ZD4ke3NjaGVkdWxlWydzdG9wLXNjaGVkdWxlJ10uc3RvcC5uYW1lfTwvdGQ+XG4gICAgICAgICAgICA8dGQ+JHtzY2hlZHVsZVsnc3RvcC1zY2hlZHVsZSddLnN0b3BbJ2Nyb3NzLXN0cmVldCddLm5hbWV9PC90ZD5cbiAgICAgICAgICAgIDx0ZD4ke3NjaGVkdWxlWydzdG9wLXNjaGVkdWxlJ10uc3RvcC5kaXJlY3Rpb259PC90ZD5cbiAgICAgICAgICAgIDx0ZD4ke3NjaGVkdWxlU3RvcC5idXMua2V5fTwvdGQ+XG4gICAgICAgICAgICA8dGQ+JHt0aW1lQ292ZXJ0MTJoKHNjaGVkdWxlU3RvcC50aW1lcy5hcnJpdmFsLnNjaGVkdWxlZCl9PC90ZD5cbiAgICAgICAgICA8L3RyPmBcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcbn1cblxuaW5wdXRGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBzZWFyY2hTdHJlZXRzKGV2ZW50LnRhcmdldFswXS52YWx1ZSlcbiAgLnRoZW4oKGRhdGUpID0+IHtcbiAgICByZXR1cm4gc3RyZWV0c0xpc3RIVE1MKGRhdGUpO1xuICB9KVxuICAuY2F0Y2goKGVycikgPT4gYWxlcnQoZXJyKSk7XG4gIGV2ZW50LnRhcmdldFswXS52YWx1ZSA9ICcnO1xufSlcblxuc3RyZWV0c0xpc3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgdGl0bGUuaW5uZXJIVE1MID0gYERpc3BsYXlpbmcgcmVzdWx0cyBmb3IgJHtldmVudC50YXJnZXQuY2xvc2VzdCgnYScpLmlubmVySFRNTH1gXG4gIGdldEFsbFN0b3BLZXlzKGV2ZW50LnRhcmdldC5jbG9zZXN0KCdhJykuZGF0YXNldC5zdHJlZXRLZXkpXG4gIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcbiAgLnRoZW4oKGFsbFN0b3BzKSA9PiB7XG4gICAgY29uc3Qgc3RvcFByb21pc2VzID0gW107XG4gICAgYWxsU3RvcHMubWFwKChzdG9wKSA9PiB7XG4gICAgICBzdG9wUHJvbWlzZXMucHVzaChnZXRTdG9wc1NjaGVkdWxlKHN0b3Aua2V5KSk7XG4gICAgfSk7XG5cbiAgICBQcm9taXNlLmFsbChzdG9wUHJvbWlzZXMpXG4gICAgLnRoZW4odmFsdWUgPT4ge3JldHVybiBzY2hlZHVsZUxpc3RIVE1MKHZhbHVlKX0pXG4gICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAgfSk7XG59KSJdLCJuYW1lcyI6WyJhcGlLZXkiLCJpbnB1dEZvcm0iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzdHJlZXRzTGlzdCIsInN0b3BzU2NoZWR1bGUiLCJ0aXRsZSIsInN0cmVldHNMaXN0SFRNTCIsImlubmVySFRNTCIsInN0cmVldHMiLCJmb3JFYWNoIiwic3RyZWV0IiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwia2V5IiwibmFtZSIsInNlYXJjaFN0cmVldHMiLCJhc3luYyIsInN0cmVldE5hbWUiLCJhcnJheSIsInNwbGl0Iiwiam9pbiIsInN0cmVldFVSTCIsInJlc3BvbnNlIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsInN0YXR1cyIsImxlbmd0aCIsImdldEFsbFN0b3BLZXlzIiwic3RyZWV0S2V5Iiwic3RvcHNVUkwiLCJzdG9wcyIsImdldFN0b3BzU2NoZWR1bGUiLCJzdG9wc0tleSIsInN0b3BzU2NoZWR1bGVVUkwiLCJ0aW1lQ292ZXJ0MTJoIiwiZGF0ZSIsIkRhdGUiLCJkYXRlU3RyaW5nIiwiaG91cjI0IiwiZ2V0SG91cnMiLCJob3VyMTIiLCJtaW51dGUiLCJnZXRNaW51dGVzIiwiYW1wbSIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJzY2hlZHVsZUxpc3RIVE1MIiwic2NoZWR1bGVzIiwic2NoZWR1bGUiLCJzdG9wIiwiZGlyZWN0aW9uIiwic2NoZWR1bGVTdG9wIiwiYnVzIiwidGltZXMiLCJhcnJpdmFsIiwic2NoZWR1bGVkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJ0YXJnZXQiLCJ2YWx1ZSIsInRoZW4iLCJjYXRjaCIsImFsZXJ0IiwiZXJyIiwiY2xvc2VzdCIsImRhdGFzZXQiLCJjb25zb2xlIiwibG9nIiwic3RvcFByb21pc2VzIiwiYWxsU3RvcHMiLCJtYXAiLCJwdXNoIiwiUHJvbWlzZSIsImFsbCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBUyx1QkFDVEMsVUFBWUMsU0FBU0MsY0FBYyxRQUNuQ0MsWUFBY0YsU0FBU0MsY0FBYyxZQUNyQ0UsY0FBZ0JILFNBQVNDLGNBQWMsU0FDdkNHLE1BQVFKLFNBQVNDLGNBQWMsZ0JBRS9CSSxnQkFBa0IsSUFDdEJILFlBQVlJLFVBQVksR0FDeEJDLEVBQVFDLFFBQVFDLElBQ2RQLFlBQVlRLG1CQUFtQiw0Q0FDQ0QsRUFBT0U7U0FDbENGLEVBQU9HLGVBS1ZDLGNBQWdCQyxNQUFPQyxJQUMzQixJQUFJQyxFQUFRRCxFQUFXRSxNQUFNLEtBQzdCRixFQUFhQyxFQUFNRSxLQUFLLE9BQ3BCQyw2REFBdUVyQixlQUFlaUIsZUFDMUYsTUFBTUssUUFBaUJDLE1BQU1GLEdBQ3ZCRyxRQUFhRixFQUFTRyxPQUU1QixHQUFxQixNQUFoQkQsRUFBS0UsUUFBaUMsTUFBaEJGLEVBQUtFLFFBQXlDLElBQXhCRixFQUFLZixRQUFRa0IsT0FDNUQsS0FBTSxtQkFHUixPQUFPSCxFQUFLZixTQUdSbUIsZUFBaUJaLE1BQU1hLElBQ3ZCQywyREFBb0U5QixpQkFBaUI2QixJQUN6RixNQUFNUCxRQUFpQkMsTUFBTU8sR0FHN0IsYUFGbUJSLEVBQVNHLFFBRWhCTSxPQUdSQyxpQkFBbUJoQixNQUFPaUIsSUFDMUJDLDhDQUErREQsMkJBQWtDakMsaUNBRXJHLE1BQU1zQixRQUFpQkMsTUFBTVcsR0FHN0IsYUFGbUJaLEVBQVNHLFFBS3hCVSxjQUFnQixJQUNwQixJQUFJQyxFQUFPLElBQUlDLEtBQUtDLEdBQ3BCLElBQUlDLEVBQVNILEVBQUtJLFdBQ2RDLEVBQVNGLEVBQVMsSUFBTSxHQUM1QixJQUFJRyxFQUFTTixFQUFLTyxhQUNkQyxFQUFRTCxFQUFTLElBQWlCLEtBQVhBLEVBQWlCLEtBQU8sS0FFbkQsU0FBVUUsS0FBVUMsRUFBT0csV0FBV0MsU0FBUyxFQUFHLFFBQVFGLEtBR3RERyxpQkFBbUIsSUFDdkIxQyxjQUFjRyxVQUFZLEdBRTFCd0MsRUFBVXRDLFFBQVN1QyxJQUVqQkEsRUFBUyxpQkFBaUIsbUJBQW1CdkMsUUFBUSxJQUNuRGMsRUFBSyxtQkFBbUJkLFFBQVEsSUFJOUJMLGNBQWNPLG1CQUFtQjtrQkFFdkJxQyxFQUFTLGlCQUFpQkMsS0FBS3BDO2tCQUMvQm1DLEVBQVMsaUJBQWlCQyxLQUFLLGdCQUFnQnBDO2tCQUMvQ21DLEVBQVMsaUJBQWlCQyxLQUFLQztrQkFDL0JDLEVBQWFDLElBQUl4QztrQkFDakJzQixjQUFjaUIsRUFBYUUsTUFBTUMsUUFBUUM7eUJBUTNEdkQsVUFBVXdELGlCQUFpQixTQUFVLElBQ25DQyxFQUFNQyxpQkFDTjVDLGNBQWMyQyxFQUFNRSxPQUFPLEdBQUdDLE9BQzdCQyxLQUFLLEdBQ0d2RCxnQkFBZ0I2QixJQUV4QjJCLE1BQU0sR0FBU0MsTUFBTUMsSUFDdEJQLEVBQU1FLE9BQU8sR0FBR0MsTUFBUSxLQUcxQnpELFlBQVlxRCxpQkFBaUIsUUFBUyxJQUNwQ25ELE1BQU1FLG9DQUFzQ2tELEVBQU1FLE9BQU9NLFFBQVEsS0FBSzFELFlBQ3RFb0IsZUFBZThCLEVBQU1FLE9BQU9NLFFBQVEsS0FBS0MsUUFBUXRDLFdBQ2hEa0MsTUFBTUUsR0FBT0csUUFBUUMsSUFBSUosSUFDekJILEtBQUssSUFDSixNQUFNUSxFQUFlLEdBQ3JCQyxFQUFTQyxJQUFJLElBQ1hGLEVBQWFHLEtBQUt6QyxpQkFBaUJrQixFQUFLckMsUUFHMUM2RCxRQUFRQyxJQUFJTCxHQUNYUixLQUFLRCxHQUFpQmQsaUJBQWlCYyxJQUN2Q0UsTUFBTUUsR0FBT0csUUFBUUMsSUFBSUoifQ==
